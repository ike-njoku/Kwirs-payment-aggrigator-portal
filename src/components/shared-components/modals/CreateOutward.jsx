"use client";
import React, { useState } from "react";
import ModalLayout from "./ModalLayout";
import AuthButtons from "../buttons/AuthButtons";

const CreateOutward = ({
  handleCloseModal,
  handleCreateModal,
  isLoading,
}) => {
  const [itemCode, setItemCode] = useState("");
  const [description, setDescription] = useState("");
  const [quantity, setQuantity] = useState("");
  const [vendorId, setVendorId] = useState("");
  const [storeBranchId, setStoreBranchId] = useState("");

  const handleFormSubmit = (e) => {
    e.preventDefault();
    
    // Basic validation
    if (!itemCode.trim()) {
      toast.error("Item code is required");
      return;
    }
    if (!quantity || isNaN(quantity)) {
      toast.error("Valid quantity is required");
      return;
    }
  
    handleCreateModal(
      itemCode,
      0, // rOutwardId will be generated by backend
      storeBranchId,
      description,
      vendorId,
      quantity
    );
  };

  return (
    <ModalLayout handleCloseModal={handleCloseModal}>
      <div className="w-full p-5">
        <h3 className="my-5 text-lg font-semibold pb-4 border-b border-b-gray-500 text-gray-700">
          Create Outward
        </h3>
        <form className="w-full" onSubmit={handleFormSubmit}>
          {/* Item Code Field */}
          <div className="w-full">
            <label className="text-base font-medium text-gray-700">
              Item Code
            </label>
            <div className="border-b-2 border-b-pumpkin h-[45px] w-full rounded-md my-4">
              <input
                className="w-full h-full bg-gray-100 px-3 focus:outline-none text-gray-700"
                type="number"
                value={itemCode}
                onChange={(e) => setItemCode(e.target.value)}
                placeholder="Enter Item Code"
                required
              />
            </div>
          </div>

          {/* Description Field */}
          <div className="w-full">
            <label className="text-base font-medium text-gray-700">
              Description
            </label>
            <div className="border-b-2 border-b-pumpkin h-[45px] w-full rounded-md my-4">
              <input
                className="w-full h-full bg-gray-100 px-3 focus:outline-none text-gray-700"
                type="text"
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                placeholder="Enter Description"
              />
            </div>
          </div>

          {/* Quantity Field */}
          <div className="w-full">
            <label className="text-base font-medium text-gray-700">
              Quantity
            </label>
            <div className="border-b-2 border-b-pumpkin h-[45px] w-full rounded-md my-4">
              <input
                className="w-full h-full bg-gray-100 px-3 focus:outline-none text-gray-700"
                type="number"
                min="1"
                value={quantity}
                onChange={(e) => setQuantity(e.target.value)}
                placeholder="Enter Quantity"
                required
              />
            </div>
          </div>

          {/* Vendor ID Field */}
          <div className="w-full">
            <label className="text-base font-medium text-gray-700">
              Vendor ID
            </label>
            <div className="border-b-2 border-b-pumpkin h-[45px] w-full rounded-md my-4">
              <input
                className="w-full h-full bg-gray-100 px-3 focus:outline-none text-gray-700"
                type="number"
                value={vendorId}
                onChange={(e) => setVendorId(e.target.value)}
                placeholder="Enter Vendor ID"
              />
            </div>
          </div>

          {/* Store Branch ID Field */}
          <div className="w-full">
            <label className="text-base font-medium text-gray-700">
              Store Branch ID
            </label>
            <div className="border-b-2 border-b-pumpkin h-[45px] w-full rounded-md my-4">
              <input
                className="w-full h-full bg-gray-100 px-3 focus:outline-none text-gray-700"
                type="number"
                value={storeBranchId}
                onChange={(e) => setStoreBranchId(e.target.value)}
                placeholder="Enter Store Branch ID"
              />
            </div>
          </div>

          <AuthButtons
            label="Create"
            textColor="text-white"
            isLoading={isLoading}
          />
        </form>
      </div>
    </ModalLayout>
  );
};

export default CreateOutward;